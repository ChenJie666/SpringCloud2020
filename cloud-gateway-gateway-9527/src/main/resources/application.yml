server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true  #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: payment_routh  #payment_route   #路由的ID，没有固定规则但要求唯一，建议配合服务名
          #uri: http://localhost:8001  #匹配后提供服务的路由地址
          uri: lb://CLOUD-PRODIVER-HYSTRIX-PAYMENT #匹配后提供服务的路由地址，lb表示loadbalance
          filter:
            - AddRequestParamter=X-Request-Id,1024  #过滤器工厂会在匹配的请求头加上一对请求头，名称为X-Request-Id值为1024
          predicates:
            - Path=/payment/hystrix/ok/**  #断言，路径匹配的进行路由
            #- Before=2020-04-23T16:19:19.221+08:00[Asia/Shanghai]  #在该时间前的接口访问才有效
            - After=2020-04-23T17:19:19.221+08:00[Asia/Shanghai]  #在该时间后的接口访问才有效
        - id: payment_routh2  #payment_route  #路由的ID，没有固定规则但要求唯一，建议配合服务名
          #uri: http://localhost:8001  #匹配后提供服务的路由地址
          uri: lb://CLOUD-PRODIVER-HYSTRIX-PAYMENT #匹配后提供服务的路由地址，lb表示loadbalance
          filter:
            - AddRequestParamter=X-Request-Id,1024  #过滤器工厂会在匹配的请求头加上一对请求头，名称为X-Request-Id值为1024
          predicates:
            - Path=/payment/hystrix/circuit/**  #断言，路径相匹配的进行路由
            #- Before=2020-04-23T16:19:19.221+08:00[Asia/Shanghai]  #在该时间前的接口访问才有效
            - After=2020-04-23T15:19:19.221+08:00[Asia/Shanghai]  #在该时间后的接口访问才有效

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://eureka1.com:7001/eureka/,http://eureka2.com:7002/eureka/
  instance:
    instance-id: cloud-gateway-server
    prefer-ip-address: true